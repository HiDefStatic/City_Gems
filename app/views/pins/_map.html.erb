<head>
  <div id="map-placeholder">
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />

    <style>
        body { margin:0; padding:0; }
        #map-placeholder { position:relative;  }
    </style>

    <style>
      .mapboxgl-popup {
          max-height: 100px;
          max-width: 200px;
          font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
          position: relative;
          background-color: rgba(255,165,0,.7);
      }
    </style>
  </div>
</head>
<body>

<style>

#marker {
    background-image: url('https://www.mapbox.com/mapbox-gl-js/assets/washington-monument.jpg');
    background-size: cover;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
}



</style>

<!-- <div id="map-placeholder"> -->
<script>

// Used in new_pin.js
var addGemPopup;

var pins = <%== @pins.to_json %>;//nifty way to get Ruby info as json

mapboxgl.accessToken = "<%== ENV['MAPBOX_API_KEY'] %>";
var map = new mapboxgl.Map({
    container: 'map-placeholder', // container id
    style: 'mapbox://styles/mapbox/streets-v9', //stylesheet location
    center: [-122.3321, 47.6062], // starting position
    zoom: 11 // starting zoom
});

map.addControl(new MapboxGeocoder({
  accessToken: mapboxgl.accessToken
})); //creates search bar

map.addControl(new mapboxgl.GeolocateControl()); //creates 'my location' button

///////////////////////////////////////////////////////////////////////////////



map.on('load', function(){

  var pinFeatures = pins.map(function(pin){
    return {
      "type": "Feature",
      "properties": {
        name: pin.name,
        pinId: pin.id,
        appeal: pin.appeal
      },
      "geometry": {
          "type": "Point",
          "coordinates": [
              pin.lng,
               pin.lat
          ]
      }
    };
  }); //the above creates the pins

  map.addSource('pins', {
   type: 'geojson',
   data: {
     "type": "FeatureCollection",
       "features": pinFeatures
    }
  });

  map.addLayer({
    id:"pins",
    type: "symbol",
    source: "pins",
    layout: {
      "icon-image": "star-15",
      "icon-allow-overlap": true
    }

  });

  map.addSource('single-point', {
    type: "geojson",
    data: {
      type: "FeatureCollection",
      features: []
    }
  });

  map.addLayer({
    id:"point",
    source: "single-point",
    type: "symbol",
    layout: {
      "icon-image": "star-15",
      "icon-allow-overlap": true
    }

  });

    // When a click event occurs near a place, open a popup at the location of
  // the feature, with description HTML from its properties.
  map.on('click', function (event) {
      var features = map.queryRenderedFeatures(event.point, { layers: ['pins'] });

     if (!features.length) {
       longitude = event.lngLat.lng;
       latitude = event.lngLat.lat;
      map.getSource('single-point').setData({
          type: 'FeatureCollection',
          features: [{
              "type": "Feature",
              properties: {},
              "geometry": {
                type: "Point",
                coordinates: [event.lngLat.lng, event.lngLat.lat]
              }
           }]
         })
          map.flyTo({center: [event.lngLat.lng, event.lngLat.lat]});
         var markerHeight = 10, markerRadius = 10, linearOffset = 25;
         var popupOffsets = {
           'top': [0, 0],
           'top-left': [0,0],
           'top-right': [0,0],
           'bottom': [0, -markerHeight],
           'bottom-left': [linearOffset, (markerHeight - markerRadius + linearOffset) * -1],
           'bottom-right': [-linearOffset, (markerHeight - markerRadius + linearOffset) * -1],
           'left': [markerRadius, (markerHeight - markerRadius) * -1],
           'right': [-markerRadius, (markerHeight - markerRadius) * -1]
         };
          ////creates popup

          var link = '/pins/new?longitude='+ event.lngLat.lng + '&latitude='+ event.lngLat.lat
        var popup = new mapboxgl.Popup({offset:popupOffsets})
          .setLngLat(event.lngLat)
          .setHTML('<a id="new-gem-button" href="'+link+'">Add Gem</a>')
          .addTo(map);

          addGemPopup = popup;

          return;
      }

// needs to happen somewhere
// popup.remove();

     var feature = features[0];
     // Populate the popup and set its coordinates
      // based on the feature found.
      var link = '/pins/'+feature.properties.pinId;
      var popup = new mapboxgl.Popup()
          .setLngLat(feature.geometry.coordinates)
          .setHTML('<a align="center" href="'+link+'">'+feature.properties.name+'</a><p>'+feature.properties.appeal+'</p>')
          .addTo(map);
  });

  // Use the same approach as above to indicate that the symbols are clickable
  // by changing the cursor style to 'pointer'.
  map.on('mousemove', function (e) {
      var features = map.queryRenderedFeatures(e.point, { layers: ['pins'] });
      map.getCanvas().style.cursor = (features.length) ? 'pointer' : '';
});

});


</script>

</div>
